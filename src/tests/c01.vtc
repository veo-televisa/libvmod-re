varnishtest "basic backrefs"

server s1 {
	rxreq
	txresp -hdr "Foo: barbaz" -hdr "Bar: bazquux" -hdr "Barf: barf" \
	       -body "1111\n"
} -start

varnish v1 -vcl+backend {
	import re from "${vmod_topbuild}/src/.libs/libvmod_re.so";

	sub vcl_fetch {
		if (re.match(beresp.http.foo, "(bar)(baz)")) {
			set beresp.http.foo0 = re.backref(0, "error0");
			set beresp.http.foo1 = re.backref(1, "error1");
			set beresp.http.foo2 = re.backref(2, "error2");
			set beresp.http.foo3 = re.backref(3, "foofallback");
		} else {
			error 999;
		}

		if (re.match(beresp.http.bar, "(baz)(.+)")) {
			set beresp.http.bar0 = re.backref(0, "error0");
			set beresp.http.bar1 = re.backref(1, "error1");
			set beresp.http.bar2 = re.backref(2, "error2");
			set beresp.http.bar3 = re.backref(3, "barfallback");
		} else {
			error 999;
		}

		if (re.match(beresp.http.barf, "(.)(.)(.)(.)")) {
			set beresp.http.frap
			    = "_" + re.backref(0, "error0") + "_"
			      + re.backref(5, "")
			      + re.backref(4, "error4")
			      + re.backref(3, "error3")
			      + re.backref(2, "error2") + "p_";
		} else {
			error 999;
		}

		if (re.match(beresp.http.foo, "(frob)(nitz)")) {
			set beresp.http.frob = "nitz";
		}
		set beresp.http.frob0 = re.backref(0, "fallback0");
		set beresp.http.frob1 = re.backref(1, "fallback1");
		set beresp.http.frob2 = re.backref(2, "fallback2");

}

} -start

client c1 {
	txreq
	rxresp
	expect resp.http.foo0 == "barbaz"
	expect resp.http.foo1 == "bar"
	expect resp.http.foo2 == "baz"
	expect resp.http.foo3 == "foofallback"
	expect resp.http.bar0 == "bazquux"
	expect resp.http.bar1 == "baz"
	expect resp.http.bar2 == "quux"
	expect resp.http.bar3 == "barfallback"
	expect resp.http.frap == "_barf_frap_"
	expect resp.http.frob != "nitz"
	expect resp.http.frob0 == "fallback0"
	expect resp.http.frob1 == "fallback1"
	expect resp.http.frob2 == "fallback2"
} -run
