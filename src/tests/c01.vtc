varnishtest "basic backrefs"

server s1 {
	rxreq
	txresp -hdr "Foo: barbaz" -hdr "Bar: bazquux" -hdr "Barf: barf" \
	       -body "1111\n"
} -start

varnish v1 -vcl+backend {
	import re from "${vmod_topbuild}/src/.libs/libvmod_re.so";

	sub vcl_init {
		new barbaz = re.regex("(bar)(baz)");
		new bazplus = re.regex("(baz)(.+)");
		new fourdots = re.regex("(.)(.)(.)(.)");
		new frobnitz = re.regex("(frob)(nitz)");
	}

	sub vcl_backend_response {
		if (barbaz.match(beresp.http.foo)) {
			set beresp.http.foo0 = barbaz.backref(0, "error0");
			set beresp.http.foo1 = barbaz.backref(1, "error1");
			set beresp.http.foo2 = barbaz.backref(2, "error2");
			set beresp.http.foo3 = barbaz.backref(3, "foofallback");
		} else {
			set beresp.status = 999;
		}

		if (bazplus.match(beresp.http.bar)) {
			set beresp.http.bar0 = bazplus.backref(0, "error0");
			set beresp.http.bar1 = bazplus.backref(1, "error1");
			set beresp.http.bar2 = bazplus.backref(2, "error2");
			set beresp.http.bar3 = bazplus.backref(3, "barfallback");
		} else {
		        set beresp.status = 999;
		}


		if (barbaz.match(beresp.http.foo)
		    && bazplus.match(beresp.http.bar)) {
			set beresp.http.foo20 = barbaz.backref(0, "error0");
			set beresp.http.foo21 = barbaz.backref(1, "error1");
			set beresp.http.foo22 = barbaz.backref(2, "error2");
			set beresp.http.foo23 = barbaz.backref(3, "foofallback");
			set beresp.http.bar20 = bazplus.backref(0, "error0");
			set beresp.http.bar21 = bazplus.backref(1, "error1");
			set beresp.http.bar22 = bazplus.backref(2, "error2");
			set beresp.http.bar23 = bazplus.backref(3, "barfallback");
		} else {
			set beresp.status = 999;
		}

		if (fourdots.match(beresp.http.barf)) {
			set beresp.http.frap
			    = "_" + fourdots.backref(0, "error0") + "_"
			      + fourdots.backref(5, "")
			      + fourdots.backref(4, "error4")
			      + fourdots.backref(3, "error3")
			      + fourdots.backref(2, "error2") + "p_";
		} else {
			set beresp.status = 999;
		}

}

} -start

client c1 {
	txreq
	rxresp
	expect resp.http.foo0 == "barbaz"
	expect resp.http.foo1 == "bar"
	expect resp.http.foo2 == "baz"
	expect resp.http.foo3 == "foofallback"
	expect resp.http.bar0 == "bazquux"
	expect resp.http.bar1 == "baz"
	expect resp.http.bar2 == "quux"
	expect resp.http.bar3 == "barfallback"
	expect resp.http.foo20 == "barbaz"
	expect resp.http.foo21 == "bar"
	expect resp.http.foo22 == "baz"
	expect resp.http.foo23 == "foofallback"
	expect resp.http.bar20 == "bazquux"
	expect resp.http.bar21 == "baz"
	expect resp.http.bar22 == "quux"
	expect resp.http.bar23 == "barfallback"
	expect resp.http.frap == "_barf_frap_"
} -run
